'// НАЧАЛО ШАБЛОНА ТИПА КИДАЛКА
'//========================================================================
'// Поместите эти две строки (ниже) в основную пргм. в раздел МАССИВЫ ОРУЖИЯ
DIM SHARED sdfhsdfA(n)
REDIM sdfhsdfA(4)
'// УКАЗАНИЕ. Увеличте второе измерение массива Holder() на 1
'// Оно должно стать равным  4
'// Вставьте строки с SUB sdfhsdf по END SUB в основную пргм. (ниже)
SUB sdfhsdf(numofw)
'////////////////////////////////////////////////////////////////////////////
'// Проверяем наличие кидалок
IF Holder(numofw,  4) = 0 THEN
        '// Обновляем Цевря
        i = SetWorm(WormPos(numofw, 1), WormPos(numofw, 2), Holder(numofw, 1), numofw, REDRAW)
        '// Ваше Сообщение об отсутствии оружия
        'LOCATE 2, 27: PRINT <Сообщение...>
EXIT SUB
ELSEIF Holder(numofw,  4) > 0 THEN
        Holder(numofw,  4) = Holder(numofw,  4) - 1
END IF
 
'// Приподнимаем чуть, чтобы не замочить своего Цевря сразу
x0 = WormPos(numofw, 1) + 5
y0 = WormPos(numofw, 2) + 35
 
'// Нужно для вывода спрайта при следующем вызове
oldx = x0: oldy = y0
 
'// Коэффициент "дальновидности" кидалки (поиск твердой зоны)
d = 8 * 1.3
 
'// Получаем скорость благодаря сабу, который кладёт её в базу данных Цевря
GetVelocity (numofw)
v = Holder(numofw, 9)
 
'// Обновляем Цевря
i = SetWorm(WormPos(numofw, 1), WormPos(numofw, 2), Holder(numofw, 1), numofw, REDRAW)
 
'// Получаем угол броска (от -90 до 270 градусов)
a = Holder(numofw, 4)
 
'// Радиус дырки из массива Вашего Оружия (см. указания дальше)
R = sdfhsdfA(4)
 
'// Убираем крестик-мушку, а то её неправильно поймут, как твердую зону
i = SetTarget(numofw, " - ", FALSE)
 
'// Полет. Если возникнет БАГ (кидалка не долетает до объекта), то вместо числа 100 поставьте что-нибудь побольше
FOR t = 0 TO 100 STEP .3
 
'// Задержка (микропауза)
SOUND 32000, 1
 
'// В момент времени t=0 проверка не производится
IF t > 0 THEN
'// Кидалка просиатривает перед собой угол (по направлению полёта) в 40 градусов, с частотой 10 градусов
FOR B = Holder(numofw, 4) - 20 TO Holder(numofw, 4) + 20 STEP 10
УКАЗАНИЕ. Замените везде слова <метка_1>, <метка_2> и т.п. своими уникальными метками соответственно
'// с помощью опции Поиск -> Замена
IF POINT(x + d * COS(B * dcoef), y + d * SIN(B * dcoef)) <> 0 THEN <метка_1>
NEXT B
END IF
 
'// Если полёт только начался, спрайт не выводится
IF t > 0 THEN PUT (oldx - 12, oldy - 12), Weapon(1), PSET
'// Закон полёта кидалки (парабола)
IF t = 0 THEN
        x = x0
        y = y0
ELSE
        x = x0 + v * t * COS(A * dcoef)
        y = y0 + v * t * SIN(A * dcoef) - g * t ^ 2 / 2
END IF
 
'// Переопределение для вывода спрайта при след. итерации
oldx = x: oldy = y
 
'// Координаты кидалки - в массив
'// С помощью них Вы в любой момент узнаете, где на экране находится кидалка
Holder(numofw, 7) = x
Holder(numofw, 8) = y
 
'// Берём образ, что впереди кидалки по направлению полёта
GET (x - 12, y + 12)-(x + 12, y - 12), Weapon(1)
 
'// Когда кидалка достигает предельной нижней отметки - происходит выход из цикла полёта
IF y < 0 THEN EXIT FOR
 
'// Рисуем изображение Оружия (оно находится в виде операторов QBASIC в файле .pic
'// СОВЕТ. Если Вы хотите создать эффект вращения при полёте или что-нибудь в
этом роде, нарисуйте несколько изображений, создав пустышки Оружий
и вытащив из них .pic-файлы. А затем, с помощью изменения переменной и
оператора SELECT CASE определяйте, какое изо и когда должно появляться
 
 
NEXT t

'// Обработка взрыва.
<метка_1>
'// Стираем картинку
        PUT (oldx - 12, oldy - 12), Weapon(1), PSET

'// Обнуление времени (если Вы захотите сделать отскоки кидалки от стенок,
'// то Вам это понадобится - можно каждый раз при ударе уменьшать скорость)
и считать, что кидалка выброшена с позиции удара
        t = 0

'// Звук. Можете вставить ЗДЕСЬ СВОЙ звуковой эффект
        SOUND 40, 5

'// Отверстие цвета фона ("прозрачное")
'// Радиус отверстия хранится в массиве Вашего Оружия. Вам нужно будет его      
инициализировать значениями (см. указания дальше)
        CIRCLE (x, y), R, 0: PAINT (x, y), 0

'// Цикл закраски крайних областей круга (улучшение закраски)
        FOR b = 1 TO 360
        PAINT (x + (R - 2) * COS(b * dcoef), y + (R - 2) * SIN(b * dcoef)), 0
        NEXT b
      
'// Проверяем, не был ли убит какой-нибудь Цеврь
        FOR n = 1 TO 2
        i = CheckWorm(x, y, n, "SDFHSDF","CHECK ")
        IF i = TRUE THEN
                IF num = 1 THEN
                PUT (WormPos(num, 1), WormPos(num, 2)), W1Pic, PSET
                ELSEIF num = 2 THEN
                PUT (WormPos(num, 1), WormPos(num, 2)), W2Pic, PSET
                END IF
                xc = WormPos(num, 1)
                yc = WormPos(num, 2)
        IF num = 1 THEN GET (xc, yc + 20)-(xc + 17, yc), W1Pic
        IF num = 2 THEN GET (xc, yc + 20)-(xc + 17, yc), W2Pic
        END IF
        i = CheckWorm(x, y, n, "SDFHSDF","REAL ")
        IF i = TRUE THEN
               WormDead n
               WormPos(n, 1) = -1
        END IF
NEXT n
 
'// Поправляем графику
        i = SetWorm(WormPos(numofw, 1), WormPos(numofw, 2), Holder(numofw, 1), numofw, REDRAW)
        UpdateGraphics 0
'////////////////////////////////////////////////////////////////////////////
END SUB
 
 
'// УКАЗАНИЕ. Вставьте следующие 4 строки в функцию Worm1Active в самый
'// последний переключатель SELECT CASE Holder(1,3) (почти в самом низу).
'//  4 - это индекс Вашего Оружия, проверяемый CASE       
        CASE  4
                ret$ = "CALL SDFHSDF"
                Worm1Active$ = ret$
                EXIT SUB
 
'// УКАЗАНИЕ. Вставьте следующие 4 строки в функцию Worm2Active в самый
'// последний переключатель SELECT CASE Holder(2,3) (почти в самом низу).
        CASE  4
                ret$ = "CALL SDFHSDF"
                Worm2Active$ = ret$
                EXIT SUB
 
'// УКАЗАНИЕ. В основной пргм. после метки 998 находятся 2 переключателя,
'// очень похожих, но обрабатывающих разных червей. Вставьте 2 строки,
'// находящиеся ниже, в ОБА переключателя, заменяя слово <Номер Цевря>
'// соответственно переключателям на цифры: 1 - для обработчика
'// первого Цевря, 2 - для второго
        CASE "CALL SDFHSDF"
                sdfhsdf <Номер Цевря>
 
 
'// УКАЗАНИЕ. В функции CheckWorm после комментария '// Чем стреляли?
'// находится переключатель, обрабатывающий переменную wep. Вставьте
'// следующие 27 строк в этот переключатель. Эти строки определяют,
'// сколько единиц энергии нужно отнять, при попадании кидалки, у Цевря в
'// зависимости от дальности нахождения Цевря от эпицентра. Рассматриваются
'// промежутки до 1/3, 2/3, и 1 от общего радиуса поражения
 
CASE "SDFHSDF"
        IF x < WormPos(numofw, 1) + sdfhsdfA(4) / 3 AND x > WormPos(numofw, 1) - sdfhsdfA(4) / 3 AND y > WormPos(numofw, 2) - sdfhsdfA(4) / 3 AND y < WormPos(numofw, 2) + sdfhsdfA(4) / 3 THEN
                IF fl = "CHECK" THEN ret = TRUE
                IF fl = "REAL" AND Holder(numofw, 10) > 0 THEN
                Holder(numofw, 10) = Holder(numofw, 10) - 
                i = SetWorm(WormPos(numofw, 1), WormPos(numofw, 2), Holder(numofw, 1), numofw, DAMAGE)
                END IF
        ELSEIF x < WormPos(numofw, 1) + 2 * sdfhsdfA(4) / 3 AND x > WormPos(numofw, 1) - 2 * sdfhsdfA(4) / 3 AND y > WormPos(numofw, 2) - 2 * sdfhsdfA(4) / 3 AND y < WormPos(numofw, 2) + 2 * sdfhsdfA(4) / 3 THEN
                IF fl = "CHECK" THEN ret = TRUE
                IF fl = "REAL" AND Holder(numofw, 10) > 0 THEN
                Holder(numofw, 10) = Holder(numofw, 10) - 2 * sdfhsdfA(1) / 3
                IF Holder(numofw, 10) > 0 THEN
                i = SetWorm(WormPos(numofw, 1), WormPos(numofw, 2), Holder(numofw, 1), numofw, REDRAW)
                END IF
                Holder(numofw, 9) = TRUE
        ELSEIF x < WormPos(numofw, 1) + k * sdfhsdfA(4) / 3 AND x > WormPos(numofw, 1) - k * sdfhsdfA(4) / 3 AND y > WormPos(numofw, 2) - k * sdfhsdfA(4) / 3 AND y < WormPos(numofw, 2) + k * sdfhsdfA(4) / 3 THEN
                IF fl = "CHECK" THEN ret = TRUE
                IF fl = "REAL" AND Holder(numofw, 10) > 0 THEN
                Holder(numofw, 10) = Holder(numofw, 10) - sdfhsdfA(1) / 3
                IF Holder(numofw, 10) > 0 THEN
                i = SetWorm(WormPos(numofw, 1), WormPos(numofw, 2), Holder(numofw, 1), numofw, REDRAW)
                END IF
        END IF
 
'// Подсчёт убытков
Holder(numofw, 10) = INT(Holder(numofw, 10))
IF Holder(numofw, 10) <= 0 THEN Holder(numofw, 10) = 0: ret = TRUE
 
 
'// УКАЗАНИЕ. В подпрограмме SetWeapon увеличте переменную NumOfWep
'// на 1. Затем, в раздел Рисунки, вставьте следующие операторы:  
 
'// sdfhsdf
x = 5 + (NumOfWep - 1) * 30 + 3 * (NumOfWep - 1) + 15: y = 460
IF Holder(numofw,  3) = 0 THEN
        LINE (x - 15, 445)-(x + 30, 475), 4
        LINE (x - 15, 475)-(x + 30, 445), 4
END IF
 
w = Holder(numofw, 3)
LINE (x - 16, 444)-(x + 16, 476), 15, B
 
'// СОВЕТ. Если хотите, чтоб у Цевря после выбора Оружия появлялось
'// нечто похожее, нарисуйте  это нечто в виде операторов и вставьте в
'// переключатель, обрабатывающий элемент массива: Holder(numofw, 3)
'// При этом CASE должен проверять идентификатор Вашего Оружия.
'// Если Вы не напортачили, то он равен  3
 
 
'// УКАЗАНИЕ. Вставьте инициализацию массива Вашего Оружия в основную пргм.
'// в раздел Инициализация. Здесь элементы: 1). МАХ повреждение, 2). Радиус поражения,
'// 3). МАХ скорость и 4). Радиус воронки.
 
sdfhsdfA(1) =  3
sdfhsdfA(2) =  2
sdfhsdfA(3) =  7
sdfhsdfA(4) =  0
 
'// УКАЗАНИЕ. Инициализируйте также элемент массива Holder() с индексом
'// во втором измерении, обозначающим Ваше Оружие. Он должен быть ра-
'// вен по идее  3. Вы должны задать начальное количество
'// боеприпасов. Если Вы приравняете элемент к отрицательному числу, это
'// будет означать, что припасов бесконечно много.
 
Holder(1,  3) = ...
Holder(2,  3) = ...
 
 
'// КОНЕЦ ШАБЛОНА. С вопросами и предложениями обращайтесь по адресу:
'// 309512, г. Старый Оскол Белгородской обл., м-н Жукова, 4-28,
'// Довженко Егор. Или по телефону: (0725) 42-59-59
'//========================================================================